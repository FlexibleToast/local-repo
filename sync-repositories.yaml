- name: Sync repositories to external host
  hosts: ext_repository
  become: yes

  tasks:

  - name: Check for rhel-7-server-rpms
    ansible.builtin.assert:
      that: "'rhel-7-server-rpms' in repos"
      fail_msg: "Repos must include rhel-7-server-rpms to maintain base OS"
    when: ansible_distribution_major_version == '7'

  - name: Check for RHEL 8 rpms
    ansible.builtin.assert:
      that: item in repos
      fail_msg: "Repos must include {{ item }}"
    loop:
    - rhel-8-for-x86_64-baseos-rpms
    - rhel-8-for-x86_64-appstream-rpms
    when: ansible_distribution_major_version == '8'

  - name: Set release version
    community.general.rhsm_release:
      release: '{{ release_version }}'
    when: release_version is defined

  - name: Enable repositories
    community.general.rhsm_repository:
      name:  '{{ repos }}'

  - name: Install prereqs
    ansible.builtin.package:
      name: '{{ packages }}'
      state: present
    vars:
      packages:
      - createrepo
      - yum-utils

  - name: Create reposync arguments
    ansible.builtin.set_fact:
      reposync_argv:
      - reposync
      - -m # download-comps
      - --download-metadata
      - --gpgcheck
      - -p # download-path
      - '{{ repo_path }}'

  - name: Check for delete
    ansible.builtin.set_fact:
      reposync_argv: "{{ reposync_argv }} + ['--delete']"
    when: delete | default(false)

  - name: Check for newest only
    ansible.builtin.set_fact:
      reposync_argv: "{{ reposync_argv }} + ['--newest-only']"
    when: newest | default(false)

  - name: Sync the repositories
    ansible.builtin.command:
      argv: "{{ reposync_argv }} + ['--repoid={{ item }}']"
    loop: '{{ repos }}'

  - name: Tar repos for export
    ansible.builtin.archive:
      path: "{{ repo_path }}/{{ item }}"
      dest: "{{ output_path }}/{{ item }}.tgz"
    loop: '{{ repos }}'
    when: export | default(false)
